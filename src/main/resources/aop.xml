<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--Bean配置-->
    <bean id="projectService" class="com.appleyk.aop.ProjectService"/>
    <bean id="logAspects" class="com.appleyk.aop.LogAspects"/>
    <aop:config>
        <!--定义切面，大多用于日志和缓存-->
        <aop:aspect ref="logAspects">
            <!-- 配置切点，切点的表达式说明如下：-->
            <!-- 第一个星号，表示返回任意类型，-->
            <!-- 第二个星号，表示所有类-->
            <!-- 第三个星号，表示所有方法-->
            <!-- 括号里面的两个..，表示任意参数-->
            <aop:pointcut id="log" expression="execution(* *.*(..))"/>
            <!--定义前切入点-->
            <aop:before method="before" pointcut-ref="log"/>
            <!--定义后切入点-->
            <aop:after method="after" pointcut-ref="log"/>
            <!--定义环绕切入点-->
            <aop:around method="around" pointcut-ref="log"/>
            <!--定义方法返回结果切入点,即方法返回结果的一瞬间，拿到值-->
            <aop:after-returning method="afterReturn" pointcut-ref="log" returning="result"/>
            <!--定义异常返回切入点,即方法执行异常时，拿到异常对象-->
            <aop:after-throwing method="exception" pointcut-ref="log" throwing="ex"/>
        </aop:aspect>
    </aop:config>

</beans>